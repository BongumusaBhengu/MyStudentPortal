@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using MyStudentPortal.Domain.Entities

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager
@inject ISnackbar Snackbar

<PageTitle>Profile</PageTitle>

<EditForm EditContext="editContext" method="post" OnValidSubmit="OnValidSubmitAsync" FormName="profile">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="6" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudItem xs="12">
                        <div class="d-flex justify-center" style="padding-bottom: 25px;">
                            <MudText>Profile</MudText>
                        </div>
                    </MudItem>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="user.Name" class="form-control" />
                        <label for="name" class="form-label">Name</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="user.Surname" class="form-control" />
                        <label for="surname" class="form-label">Surname</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="user.UserName" class="form-control" disabled />
                        <label for="email" class="form-label">Email</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="user.PhoneNumber" class="form-control" placeholder="Please enter your phone number." />
                        <label for="phone-number" class="form-label">Phone number</label>
                    </div>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small">Save</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private EditContext? editContext;

    protected override async Task OnInitializedAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User);
        editContext = new EditContext(user);
    }

    private async Task OnValidSubmitAsync()
    {

        var result = await UserManager.UpdateAsync(user);

        if (!result.Succeeded)
        {
            Snackbar.Add($"Error: {string.Join(", ", result.Errors.Select(error => error.Description))}", Severity.Error);
            return;
        }

        await SignInManager.RefreshSignInAsync(user);

        Snackbar.Add($"{user.Name} {user.Surname} profile has been updated", Severity.Info);

        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
