@page "/Account/Manage/Enrollments"
@using MediatR
@using Microsoft.AspNetCore.Identity
@using MyStudentPortal.Application.Features
@using MyStudentPortal.Application.Features.Courses
@using MyStudentPortal.Domain.Entities


@inject IMediator Mediator;
@inject UserManager<ApplicationUser> UserManager

<h1>Student Registration</h1>
<div class="col-md-4">
    <EditForm Model="Input" FormName="enrollment" method="post">
        <ValidationSummary class="text-danger" role="alert" />
        <div class="form-floating mb-3">
            <label for="studentId">Student name:</label>
            <InputText Value="@Student" type="string" id="studentId" class="form-control" disabled />
        </div>
        <div class="form-floating mb-3">
            <label for="courseList">Courses:</label>
            <select multiple id="courseList" class="form-control">
                @foreach (var course in Courses)
                {
                    <option value="@course.Id">@course.Name</option>
                }
            </select>
        </div>
        <div class="form-floating mb-3">
            <button type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </div>
    </EditForm>
</div>
@code {

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string Student { get; set; } = "";

    private IList<CourseDto>? Courses { get; set; }

    private Enrollment? Input { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = await UserManager.GetUserAsync(HttpContext.User);
        Student = $"{user.Name} {user.Surname}";
        Courses = await GetCoursesAsync();
    }

    private async Task<IList<CourseDto>> GetCoursesAsync()
    {
        return await Mediator.Send(new GetCourseQuery());
    }

    private async Task OnValidSubmitAsync(EditContext editContext)
    {

    }
}